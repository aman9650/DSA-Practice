//BINARY SEARCH VERY IMPORTANT
import java.util.Scanner;
import java.util.Arrays;
public class Main{
    public static void main(String[] args){
        Scanner in =new Scanner(System.in);
        
        /* //array is already sorted
            //first step - find middle elements
            //second step - check if target element is greater or smaller then middle element 
            //third step - if element is smaller search in left side otherwise search in right side
            // fourth step - of target is greater then right side element will be taken as new arrayand 
            and find middle elemnts and same process goes in right side
        */
        
        
        
        System.out.print("Enter the size of array: ");
        int size=in.nextInt();
        
        int[] arr=new int[size];
        System.out.print("Enter the elements of array: ");
        
        for(int i=0;i<arr.length;i++){
            arr[i]=in.nextInt();
        }
       System.out.print("Element to find: ");
       int target=in.nextInt();
       
       int ans=binarySearch(arr,target);
       System.out.println(ans);
    }
    
    //return -1 if it doesn't exist
    static int binarySearch(int[] arr,int target){
        Arrays.sort(arr);
        int start=0;
        int end=arr.length-1;
        while(start<=end){
            // find middle Element
         //   int mid =(start+end)/2; // might be possible that (start + end) exceeds the range of int in jkava
        int mid=start + (end - start) /2;
        if(target<arr[mid]){
            end=mid-1;
        }   
        else if(target>arr[mid]){
            start=mid+1;
        }
        else{
            return mid;
        }
            
            
        }
        return -1;
        
    }
        
        
}
    
    
